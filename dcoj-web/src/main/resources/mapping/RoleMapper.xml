<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dcoj.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.dcoj.entity.RoleEntity">
        <id column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="available" property="available" jdbcType="INTEGER"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="deleted" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        role_id, `name`, description, available, gmt_create, gmt_modified, is_deleted
    </sql>

    <update id="removeByPrimaryKey" parameterType="java.lang.Integer">
        update role
        set is_deleted = 1
        where role_id = #{roleId,jdbcType=INTEGER}
          and is_deleted = 0
    </update>


    <insert id="save" parameterType="com.dcoj.entity.RoleEntity">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="available != null">
                available,
            </if>
            <if test="deleted != null">
                is_deleted,
            </if>
            gmt_create,
            gmt_modified
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                #{available,jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=INTEGER},
            </if>
            DATE_FORMAT(NOW(), '%Y-%m-%d %H:%m:%s'),
            DATE_FORMAT(NOW(), '%Y-%m-%d %H:%m:%s')
        </trim>
    </insert>

    <select id="getByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role
        where role_id = #{roleId,jdbcType=INTEGER} and is_deleted = 0
    </select>

    <update id="updateRole" parameterType="com.dcoj.entity.RoleEntity">
        update role
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                is_deleted = #{deleted,jdbcType=INTEGER},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER} and is_deleted = 0
    </update>

    <select id="getRoleByUserId" resultType="com.dcoj.entity.RoleEntity" parameterType="java.lang.Integer">
        select role.role_id      as roleId,
               role.name         as `name`,
               role.description  as description,
               role.available    as available,
               role.gmt_create   as gmtCreate,
               role.gmt_modified as gmtModified,
               role.is_deleted   as deleted
        from user_role,
             role
        where user_id = #{userId,jdbcType=INTEGER}
          and role.role_id = user_role.role_id
          and user_role.is_deleted = 0
    </select>

    <select id="listAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role where is_deleted = 0
    </select>

    <select id="countRoles" resultType="java.lang.Integer">
        select count(*)
        from role
        where is_deleted = 0
    </select>


</mapper>