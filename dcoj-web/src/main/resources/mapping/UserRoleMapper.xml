<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dcoj.dao.UserRoleMapper">
    <resultMap id="BaseResultMap" type="com.dcoj.entity.UserRoleEntity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="deleted" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id, role_id, gmt_create, gmt_modified, is_deleted
    </sql>

    <update id="removeByUserId" parameterType="java.lang.Integer">
        update user_role
        <set>
            is_deleted = 1
        </set>
        where user_id = #{userId,jdbcType=INTEGER} and is_deleted = 0
    </update>

    <insert id="save" parameterType="java.lang.Integer">
        insert into user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            gmt_create,
            gmt_modified
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            DATE_FORMAT(NOW(), '%Y-%m-%d %H:%m:%s'),
            DATE_FORMAT(NOW(), '%Y-%m-%d %H:%m:%s')
        </trim>
    </insert>


    <select id="getByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_role
        where user_id = #{userId,jdbcType=INTEGER} and is_deleted = 0
    </select>

    <update id="updateUserRole" parameterType="com.dcoj.entity.UserRoleEntity">
        update user_role
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER} and is_deleted = 0
    </update>

    <select id="countByRoleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from user_role
        where role_id = #{roleId,jdbcType=INTEGER} and is_deleted = 0
    </select>


    <select id="countByRoleIdToday" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from user_role
        where to_days(gmt_create) = to_days(now()) and role_id = #{roleId,jdbcType=INTEGER} and is_deleted = 0
    </select>

    <select id="countByRoleIdYesterday" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from user_role
        where TO_DAYS(NOW())-TO_DAYS(gmt_create)=1 and role_id = #{roleId,jdbcType=INTEGER} and is_deleted = 0
    </select>

    <select id="countByRoleIdMonth" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from user_role
        where DATE_FORMAT( gmt_create, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' ) and role_id = #{roleId,jdbcType=INTEGER} and is_deleted = 0
    </select>

</mapper>