<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcoj.dao.TestCaseMapper">
    <resultMap id="BaseResultMap" type="com.dcoj.entity.TestCaseEntity">
        <id column="tc_id" jdbcType="INTEGER" property="tcId"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="stdin" jdbcType="VARCHAR" property="stdin"/>
        <result column="stdout" jdbcType="VARCHAR" property="stdout"/>
    </resultMap>

    <!--自定义SQL:Begin-->
    <!--根据Example查询一条数据-->
    <select id="selectOneByExample" parameterType="com.dcoj.entity.example.TestCaseEntityExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from test_case
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        LIMIT 1;
    </select>
    <!--自定义SQL:End-->

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        tc_id, pid, stdin, stdout
    </sql>
    <select id="selectByExample" parameterType="com.dcoj.entity.example.TestCaseEntityExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from test_case
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from test_case
        where tc_id = #{tcId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from test_case
        where tc_id = #{tcId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.dcoj.entity.example.TestCaseEntityExample">
        delete from test_case
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.dcoj.entity.TestCaseEntity">
        insert into test_case (tc_id, pid, stdin,
        stdout)
        values (#{tcId,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{stdin,jdbcType=VARCHAR},
        #{stdout,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.dcoj.entity.TestCaseEntity">
    insert into test_case
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="tcId != null">
            tc_id,
        </if>
        <if test="pid != null">
            pid,
        </if>
        <if test="stdin != null">
            stdin,
        </if>
        <if test="stdout != null">
            stdout,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="tcId != null">
            #{tcId,jdbcType=INTEGER},
        </if>
        <if test="pid != null">
            #{pid,jdbcType=INTEGER},
        </if>
        <if test="stdin != null">
            #{stdin,jdbcType=VARCHAR},
        </if>
        <if test="stdout != null">
            #{stdout,jdbcType=VARCHAR},
        </if>
    </trim>
</insert>
    <select id="countByExample" parameterType="com.dcoj.entity.example.TestCaseEntityExample"
            resultType="java.lang.Long">
        select count(*) from test_case
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update test_case
        <set>
            <if test="record.tcId != null">
                tc_id = #{record.tcId,jdbcType=INTEGER},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=INTEGER},
            </if>
            <if test="record.stdin != null">
                stdin = #{record.stdin,jdbcType=VARCHAR},
            </if>
            <if test="record.stdout != null">
                stdout = #{record.stdout,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update test_case
        set tc_id = #{record.tcId,jdbcType=INTEGER},
        pid = #{record.pid,jdbcType=INTEGER},
        stdin = #{record.stdin,jdbcType=VARCHAR},
        stdout = #{record.stdout,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.dcoj.entity.TestCaseEntity">
        update test_case
        <set>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="stdin != null">
                stdin = #{stdin,jdbcType=VARCHAR},
            </if>
            <if test="stdout != null">
                stdout = #{stdout,jdbcType=VARCHAR},
            </if>
        </set>
        where tc_id = #{tcId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dcoj.entity.TestCaseEntity">
        update test_case
        set pid = #{pid,jdbcType=INTEGER},
        stdin = #{stdin,jdbcType=VARCHAR},
        stdout = #{stdout,jdbcType=VARCHAR}
        where tc_id = #{tcId,jdbcType=INTEGER}
    </update>

    <insert id="saveAll" parameterType="java.util.List">
        INSERT INTO test_case(
        <include refid="Base_Column_List"/>
        )
        VALUES
        <foreach collection="list" item="testCases" index="index" separator=",">
            (
            #{testCases.tcId},#{testCases.pid},#{testCases.stdin},#{testCases.stdout}
            )
        </foreach>

    </insert>
</mapper>